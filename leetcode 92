# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverseBetween(self, head: ListNode, m: int, n: int) -> ListNode:
        if not head or not head.next or m==n:
            return head
        dummy1, dummy2 = ListNode(-1), ListNode(-2)
        dummy1.next = head
        p = dummy1
        for i in range(1, m):
            p = p.next
        pre = p.next
        cur = pre.next
        p.next = None
        q = dummy2
        q.next = None
        for i in range(n-m+1):
            pre.next = q.next
            q.next = pre
            pre = cur
            if i != n-m:
                cur = cur.next
        while q.next:
            q = q.next
        q.next = pre
        p.next = dummy2.next
        return dummy1.next

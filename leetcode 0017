class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        words = {'2': ['a', 'b', 'c'],
                 '3': ['d', 'e', 'f'],
                 '4': ['g', 'h', 'i'],
                 '5': ['j', 'k', 'l'],
                 '6': ['m', 'n', 'o'],
                 '7': ['p', 'q', 'r', 's'],
                 '8': ['t', 'u', 'v'],
                 '9': ['w', 'x', 'y', 'z']}
        if not digits:
            return []
        def dfs(digits, res, ans):
            if not digits:
                ans.append(res)
            else:
                for j in words[digits[0]]:
                    res += j
                    dfs(digits[1:], res, ans)
                    res = res[:-1]
        digits = list(digits)
        ans = []
        dfs(digits, '', ans)
        return ans

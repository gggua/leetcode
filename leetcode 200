class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if not grid:
            return 0
        rows, columns = len(grid), len(grid[0])
        ans = 0
        for row in range(rows):
            for column in range(columns):
                if grid[row][column] == '1':
                    ans += 1
                    self.dfs(grid, row, column)
        return ans
    def dfs(self, grid, i, j):
        grid[i][j] = '0'
        if i >= 1 and grid[i-1][j] == '1':
            self.dfs(grid, i-1, j)
        if i < len(grid)-1 and grid[i+1][j] == '1':
            self.dfs(grid, i+1, j)
        if j >= 1 and grid[i][j-1] == '1':
            self.dfs(grid, i, j-1)
        if j < len(grid[0])-1 and grid[i][j+1] == '1':
            self.dfs(grid, i, j+1)

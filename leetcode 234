# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def isPalindrome(self, head: ListNode) -> bool:
        # res = []
        # while head:
        #     res.append(head.val)
        #     head = head.next
        # return res == res[::-1]
        slow, fast = head, head
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        temp = slow
        prev = None
        while temp:
            res = temp.next
            temp.next = prev
            prev = temp
            temp = res
        while head and prev:
            if head.val != prev.val:
                return False
            head = head.next
            prev = prev.next
        return True

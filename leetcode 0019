# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        # temp, num = head, 0
        # while temp:
        #     temp = temp.next
        #     num += 1
        # k = num - n
        # dummy = ListNode(-1)
        # dummy.next = head
        # temp = dummy
        # while k>0:
        #     temp = temp.next
        #     k -= 1
        # temp.next = temp.next.next
        # return dummy.next
        dummy = ListNode(-1)
        dummy.next = head
        slow, fast = dummy, head
        while n > 0:
            fast = fast.next
            n -= 1
        while fast:
            fast = fast.next
            slow = slow.next
        slow.next = slow.next.next
        return dummy.next

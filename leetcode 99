# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def __init__(self):
        self.res = []
    def recoverTree(self, root):
        self.to_middleTree(root)
        node1, node2 = None, None
        for i in range(len(self.res) - 1):
            if self.res[i].val > self.res[i + 1].val and node1 == None:
                node1, node2 = self.res[i], self.res[i + 1]
            elif self.res[i].val > self.res[i + 1].val and node1 != None:
                node2 = self.res[i + 1]
        node1.val, node2.val = node2.val, node1.val
    def to_middleTree(self, root):
        if root:
            self.to_middleTree(root.left)
            self.res.append(root)
            self.to_middleTree(root.right)

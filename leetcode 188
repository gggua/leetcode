class Solution:
    def maxProfit(self, k: int, prices: List[int]) -> int:
        if k ==0:
            return 0
        if k >= len(prices)/2:
            return self.maxProfit2(prices)
        res = [[0]*2 for _ in range(k)]
        for i in range(k):
            res[i][0] = float('-inf')
        for price in prices:
            res[0][0] = max(res[0][0], -price)
            res[0][1] = max(res[0][0] + price, res[0][1])
            for i in range(1, len(res)):
                res[i][0] = max(res[i][0], res[i-1][1] - price)
                res[i][1] = max(res[i][0] + price, res[i][1])
        return res[-1][1]
    def maxProfit2(self, prices):
        sums = 0
        for i in range(len(prices) - 1):
            if prices[i+1] > prices[i]:
                sums += prices[i+1] - prices[i]
        return sums
        

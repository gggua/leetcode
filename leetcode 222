# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
##########################solution 1
class Solution:
    def countNodes(self, root: TreeNode) -> int:
        if not root:
            return 0
        if not root.left and not root.right:
            return 1
        else:
            return 1 + self.countNodes(root.left) + self.countNodes(root.right)
            
##########################solution 2       
class Solution:
    def countNodes(self, root: TreeNode) -> int:
        if not root:
            return 0
        left_depth, right_depth = self.get_depth(root.left), self.get_depth(root.right)
        if left_depth == right_depth:
            return pow(2, left_depth) + self.countNodes(root.right)
        else:
            return pow(2, left_depth-1) + self.countNodes(root.left)
    def get_depth(self, root):
        depth = 0
        while root:
            depth += 1
            root = root.left
        return depth

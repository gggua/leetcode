# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def sortedListToBST(self, head: ListNode) -> TreeNode:
        nums = []
        res = head
        while res:
            nums.append(res.val)
            res = res.next
        def sortedToBST(nums):
            if len(nums) == 0:
                return 
            if len(nums) == 1:
                return TreeNode(nums[0])
            middle = len(nums)//2
            root = TreeNode(nums[middle])
            root.left = sortedToBST(nums[:middle])
            root.right = sortedToBST(nums[middle + 1:])
            return root
        return sortedToBST(nums)
